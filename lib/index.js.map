{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  isVue2,\n  defineComponent,\n  onBeforeMount,\n  onMounted,\n  onBeforeUnmount,\n  reactive,\n  ref,\n  shallowRef,\n  watch,\n  type ShallowRef,\n  type VNodeChildren,\n} from 'vue-demi';\nimport { h } from 'vue';\n\nfunction polyfillAttr(rest: Record<string, any>, attrs: Record<string, any>) {\n  return isVue2\n    ? {\n        ...rest,\n        attrs: attrs,\n      }\n    : {\n        ...rest,\n        ...attrs,\n      };\n}\ntype RawChildren =\n  | VNodeChildren\n  | {\n      default: () => VNodeChildren;\n    };\n\ntype ReactiveData = {\n  views: number;\n\n  // 滚动距离\n  offset: number;\n  // 不包含插槽的高度\n  listTotalSize: number;\n  // 虚拟占位尺寸，是从0到renderBegin的尺寸\n  virtualSize: number;\n  // 可视区的起始下标\n  inViewBegin: number;\n  // 可视区的结束下标\n  inViewEnd: number;\n\n  // buffer的起始下标\n  renderBegin: number;\n  // buffer的结束下标\n  renderEnd: number;\n\n  bufferTop: number;\n  bufferBottom: number;\n};\n\nfunction polyfillChildren(children: any[]): RawChildren {\n  return isVue2\n    ? children\n    : {\n        default: () => children,\n      };\n}\n\nfunction polyfillSlot(slot: any) {\n  return isVue2 ? slot : slot?.();\n}\n\nconst ObserverItem = defineComponent({\n  name: 'ObserverItem',\n  props: {\n    resizeObserver: {\n      type: ResizeObserver,\n      require: true,\n    },\n    id: {\n      type: [String, Number],\n      require: true,\n    },\n    unmount: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  setup(props) {\n    const itemRefEl = ref(null);\n\n    onMounted(() => {\n      if (props.resizeObserver && itemRefEl.value) {\n        props.resizeObserver.observe(itemRefEl.value);\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (props.resizeObserver && itemRefEl.value) {\n        props.resizeObserver.unobserve(itemRefEl.value);\n      }\n      if (props.unmount) {\n        props.unmount();\n      }\n    });\n\n    return {\n      itemRefEl,\n    };\n  },\n  render() {\n    const { id } = this;\n    return h(\n      'div',\n      polyfillAttr(\n        { ref: 'itemRefEl' },\n        {\n          'data-id': id,\n        },\n      ),\n      [polyfillSlot(this.$slots.default)],\n    );\n  },\n});\n\nconst VirtualList = defineComponent({\n  name: 'VirtualList',\n  props: {\n    list: {\n      type: Array<any>,\n      default: () => [],\n    },\n    // 数据key\n    itemKey: {\n      type: [String, Number],\n      required: true,\n    },\n    // 最小尺寸\n    minSize: {\n      type: Number,\n      default: 20,\n      required: true,\n    },\n    fixed: {\n      type: Boolean,\n      default: false,\n    },\n    buffer: {\n      type: Number,\n      default: 0,\n    },\n    bufferTop: {\n      type: Number,\n      default: 0,\n    },\n    bufferBottom: {\n      type: Number,\n      default: 0,\n    },\n    // 滚动距离阈值\n    scrollDistance: {\n      type: Number,\n      default: 0,\n    },\n    // 是否为水平移动\n    horizontal: {\n      type: Boolean,\n      default: false,\n    },\n    // 起始下标\n    start: {\n      type: Number,\n      default: 0,\n    },\n    // 起始偏移量\n    offset: {\n      type: Number,\n      default: 0,\n    },\n    listStyle: {\n      type: String,\n      default: '',\n    },\n    listClass: {\n      type: String,\n      default: '',\n    },\n    itemStyle: {\n      type: String,\n      default: '',\n    },\n    itemClass: {\n      type: String,\n      default: '',\n    },\n    headerClass: {\n      type: String,\n      default: '',\n    },\n    headerStyle: {\n      type: String,\n      default: '',\n    },\n    footerClass: {\n      type: String,\n      default: '',\n    },\n    footerStyle: {\n      type: String,\n      default: '',\n    },\n    stickyHeaderClass: {\n      type: String,\n      default: '',\n    },\n    stickyHeaderStyle: {\n      type: String,\n      default: '',\n    },\n    stickyFooterClass: {\n      type: String,\n      default: '',\n    },\n    stickyFooterStyle: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, context) {\n    const clientRef = ref<typeof ObserverItem | null>(null);\n    const listRefEl = ref<HTMLElement | null>(null);\n    const sizesMap = new Map();\n    const renderKey = ref(new Date().getTime());\n    let direction: 'forward' | 'backward' = 'backward';\n    // 一个手动设置滚动的标志位，用来判断是否需要纠正滚动位置\n    let fixOffset = false;\n    let forceFixOffset = false;\n    const slotSize = {\n      clientSize: 0,\n      headerSize: 0,\n      footerSize: 0,\n      stickyHeaderSize: 0,\n      stickyFooterSize: 0,\n    };\n\n    // 全局需要响应式的数据\n    const reactiveData: ReactiveData = reactive({\n      // 可视区域的个数，不算buffer，只和clientSize和minSize有关\n      views: 0,\n\n      // 滚动距离\n      offset: 0,\n      // 不包含插槽的高度\n      listTotalSize: 0,\n      // 虚拟占位尺寸，是从0到renderBegin的尺寸\n      virtualSize: 0,\n      // 可视区的起始下标\n      inViewBegin: 0,\n      // 可视区的结束下标\n      inViewEnd: 0,\n\n      // buffer的起始下标\n      renderBegin: 0,\n      // buffer的结束下标\n      renderEnd: 0,\n\n      bufferTop: 0,\n      bufferBottom: 0,\n    });\n\n    function getOffset() {\n      const directionKey = props.horizontal ? 'scrollLeft' : 'scrollTop';\n      return clientRef.value?.$el ? clientRef.value.$el[directionKey] : 0;\n    }\n    function getSlotSize() {\n      return (\n        slotSize.headerSize +\n        slotSize.footerSize +\n        slotSize.stickyHeaderSize +\n        slotSize.stickyFooterSize\n      );\n    }\n    function getTotalSize() {\n      return (\n        reactiveData.listTotalSize +\n        slotSize.headerSize +\n        slotSize.footerSize +\n        slotSize.stickyHeaderSize +\n        slotSize.stickyFooterSize\n      );\n    }\n    function getItemSize(itemKey: string) {\n      if (props.fixed) return props.minSize;\n      return sizesMap.get(String(itemKey)) ?? props.minSize;\n    }\n    function setItemSize(itemKey: string, size: number) {\n      sizesMap.set(String(itemKey), size);\n    }\n    function deleteItemSize(itemKey: string) {\n      sizesMap.delete(String(itemKey));\n    }\n    // 通过下标来获取元素位置信息\n    function getItemPosByIndex(index: number) {\n      if (props.fixed) {\n        return {\n          top: props.minSize * index,\n          current: props.minSize,\n          bottom: props.minSize * (index + 1),\n        };\n      }\n\n      const { itemKey } = props;\n      let topReduce = slotSize.headerSize;\n      for (let i = 0; i <= index - 1; i += 1) {\n        const currentSize = getItemSize(props.list[i]?.[itemKey]);\n        topReduce += currentSize;\n      }\n      const current = getItemSize(props.list[index]?.[itemKey]);\n      return {\n        top: topReduce,\n        current,\n        bottom: topReduce + current,\n      };\n    }\n\n    function scrollToOffset(offset: number, needForceFixOffset = false) {\n      if (needForceFixOffset) {\n        forceFixOffset = true;\n      }\n      const directionKey = props.horizontal ? 'scrollLeft' : 'scrollTop';\n      if (clientRef.value?.$el) clientRef.value.$el[directionKey] = offset;\n    }\n    // expose 滚动到指定下标\n    async function scrollToIndex(index: number) {\n      console.log('scrollToIndex', index);\n\n      if (index < 0) {\n        return;\n      }\n\n      // 如果要去的位置大于长度，那么就直接调用去底部的方法\n      if (index >= props.list.length - 1) {\n        scrollToBottom();\n        return;\n      }\n\n      let { top: lastOffset } = getItemPosByIndex(index);\n      const recursion = async () => {\n        scrollToOffset(lastOffset);\n\n        setTimeout(() => {\n          // 第二次看一下有没有需要修正的情况\n          const { top: offset } = getItemPosByIndex(index);\n          // 查看位置是否有修正，有修正就递归自己\n          if (lastOffset !== offset) {\n            lastOffset = offset;\n            recursion();\n          }\n        }, 3);\n      };\n      recursion();\n    }\n    // expose 滚动到可视区域\n    async function scrollIntoView(index: number) {\n      const { top: targetMin, bottom: targetMax } = getItemPosByIndex(index);\n      const offsetMin = getOffset();\n      const offsetMax = getOffset() + slotSize.clientSize;\n      const currentSize = getItemSize(props.list[index]?.[props.itemKey]);\n      if (\n        targetMin < offsetMin &&\n        offsetMin < targetMax &&\n        currentSize < slotSize.clientSize\n      ) {\n        // 如果目标元素上方看不到，底部看得到，那么滚动到顶部部看得到就行了\n        scrollToOffset(targetMin);\n        return;\n      }\n      if (\n        targetMin + slotSize.stickyHeaderSize < offsetMax &&\n        offsetMax < targetMax + slotSize.stickyHeaderSize &&\n        currentSize < slotSize.clientSize\n      ) {\n        // 如果目标元素上方看得到，底部看不到，那么滚动到底部看得到就行了\n        scrollToOffset(\n          targetMax - slotSize.clientSize + slotSize.stickyHeaderSize,\n        );\n        return;\n      }\n\n      // 屏幕下方\n      if (targetMin + slotSize.stickyHeaderSize >= offsetMax) {\n        scrollToIndex(index);\n        return;\n      }\n\n      // 屏幕上方\n      if (targetMax <= offsetMin) {\n        scrollToIndex(index);\n        return;\n      }\n\n      // 在中间就不动了\n    }\n    // expose 滚动到顶部，这个和去第一个元素不同\n    async function scrollToTop() {\n      scrollToOffset(0);\n\n      setTimeout(() => {\n        const directionKey = props.horizontal ? 'scrollLeft' : 'scrollTop';\n        // 因为纠正滚动条会有误差，所以这里需要再次纠正\n        if (clientRef.value && clientRef.value.$el[directionKey] !== 0) {\n          scrollToTop();\n        }\n      }, 3);\n    }\n    // expose 滚动到底部\n    async function scrollToBottom() {\n      scrollToOffset(getTotalSize());\n\n      setTimeout(() => {\n        // 修复底部误差，因为缩放屏幕的时候，获取的尺寸都是小数，精度会有问题，这里把误差调整为2px\n        if (\n          Math.abs(\n            Math.round(reactiveData.offset + slotSize.clientSize) -\n              Math.round(getTotalSize()),\n          ) > 2\n        ) {\n          scrollToBottom();\n        }\n      }, 0);\n    }\n\n    // 修复vue2-diff的bug导致的selection问题\n    function fixSelection() {\n      const selection = window.getSelection();\n      if (selection) {\n        const { anchorNode, anchorOffset, focusNode, focusOffset } = selection;\n        if (\n          anchorNode &&\n          anchorOffset !== null &&\n          focusNode !== null &&\n          focusOffset &&\n          anchorNode !== focusNode\n        ) {\n          requestAnimationFrame(() => {\n            if (anchorOffset < focusOffset) {\n              selection.setBaseAndExtent(\n                anchorNode,\n                anchorOffset,\n                focusNode,\n                focusOffset,\n              );\n            } else {\n              selection.setBaseAndExtent(\n                focusNode,\n                focusOffset,\n                anchorNode,\n                anchorOffset,\n              );\n            }\n          });\n        }\n      }\n    }\n\n    function updateRange(start: number) {\n      // 修复vue2-diff的bug\n      if (direction === 'backward') {\n        fixSelection();\n      }\n\n      reactiveData.inViewBegin = start;\n      reactiveData.inViewEnd = Math.min(\n        start + reactiveData.views,\n        props.list.length,\n      );\n    }\n\n    function calcRange() {\n      const { views, offset, inViewBegin } = reactiveData;\n      const { itemKey } = props;\n\n      const offsetWithNoHeader = offset - slotSize.headerSize;\n      let start = inViewBegin;\n      let offsetReduce = getVirtualSize2beginInView();\n\n      // 当有顶部插槽的时候，快速滚动到顶部，则需要判断，并直接修正\n      if (offsetWithNoHeader < 0) {\n        updateRange(0);\n        return;\n      }\n\n      if (direction === 'forward') {\n        // 1. 没发生变化\n        if (offsetWithNoHeader >= offsetReduce) {\n          // console.log(`👆🏻👆🏻👆🏻👆🏻 for break 没变 start ${start}`);\n          return;\n        }\n        for (let i = start - 1; i >= 0; i -= 1) {\n          // 2. 变化了\n          const currentSize = getItemSize(props.list[i]?.[itemKey]);\n          offsetReduce -= currentSize;\n          // 要计算2个header插槽的高度\n          if (\n            offsetReduce <= offsetWithNoHeader &&\n            offsetWithNoHeader < offsetReduce + currentSize\n          ) {\n            start = i;\n            // console.log(`👆🏻👆🏻👆🏻👆🏻 for break 变了 start ${start}`);\n            break;\n          }\n        }\n\n        // 向上滚动需要修正\n        fixOffset = true;\n      }\n\n      if (direction === 'backward') {\n        if (offsetWithNoHeader <= offsetReduce) {\n          // console.log(`👆🏻👆🏻👆🏻👆🏻 for break 没变 start ${start}`);\n          return;\n        }\n        for (let i = start; i <= props.list.length - 1; i += 1) {\n          // 2. 变化了\n          const currentSize = getItemSize(props.list[i]?.[itemKey]);\n          // console.log('currentSize', i, props.list[i]?.[itemKey], currentSize);\n\n          if (\n            offsetReduce <= offsetWithNoHeader &&\n            offsetWithNoHeader < offsetReduce + currentSize\n          ) {\n            start = i;\n            break;\n          }\n          offsetReduce += currentSize;\n        }\n\n        // 向下滚动不需要修正\n        fixOffset = false;\n      }\n\n      // 节流\n      if (start !== reactiveData.inViewBegin) {\n        updateRange(start);\n      }\n    }\n\n    function onScroll(evt: Event) {\n      context.emit('scroll', evt);\n\n      const offset = getOffset();\n      // console.log('onscroll', offset, reactiveData.offset);\n\n      if (offset === reactiveData.offset) return;\n      direction = offset < reactiveData.offset ? 'forward' : 'backward';\n      reactiveData.offset = offset;\n\n      calcRange();\n\n      // 到达顶部\n      if (\n        direction === 'forward' &&\n        reactiveData.offset - props.scrollDistance <= 0\n      ) {\n        console.log('[VirtualList] 到达顶部');\n        context.emit('toTop', props.list[0]);\n      }\n      // 到达底部 - 放在这里是为了渲染完成拿到真是高度了，再判断是否是真的到达底部\n      if (\n        direction === 'backward' &&\n        reactiveData.offset + props.scrollDistance >=\n          reactiveData.listTotalSize + getSlotSize() - slotSize.clientSize\n      ) {\n        console.log('[VirtualList] 到达底部');\n        context.emit('toBottom', props.list[props.list.length - 1]);\n      }\n    }\n\n    function calcViews() {\n      // 不算buffer的个数\n      const newViews = Math.ceil(slotSize.clientSize / props.minSize) + 1;\n      reactiveData.views = newViews;\n    }\n\n    function onClientResize() {\n      // 可视区域尺寸变化 => 1. 更新可视区域个数 2. 可视区域个数变化后需要及时更新记录尺寸\n      calcViews();\n      updateRange(reactiveData.inViewBegin);\n    }\n\n    function calcListTotalSize() {\n      if (props.fixed) {\n        reactiveData.listTotalSize = props.minSize * props.list.length;\n        return;\n      }\n      const { itemKey } = props;\n      let re = 0;\n      for (let i = 0; i <= props.list.length - 1; i += 1) {\n        re += getItemSize(props.list[i]?.[itemKey]);\n      }\n      reactiveData.listTotalSize = re;\n    }\n\n    function reset() {\n      console.log('[VirtualList] reset');\n\n      reactiveData.offset = 0;\n      reactiveData.listTotalSize = 0;\n      reactiveData.virtualSize = 0;\n\n      reactiveData.inViewBegin = 0;\n      reactiveData.inViewEnd = 0;\n\n      reactiveData.renderBegin = 0;\n      reactiveData.renderEnd = 0;\n      sizesMap.clear();\n    }\n    // expose only\n    function decreaseTopSize(prevList: any[]) {\n      calcListTotalSize();\n      let prevListSize = 0;\n      prevList.forEach((item) => {\n        // console.log(item[props.itemKey], getItemSize(item[props.itemKey]));\n        prevListSize += getItemSize(item[props.itemKey]);\n      });\n      reactiveData.inViewBegin -= prevList.length;\n      reactiveData.virtualSize -= prevListSize;\n      scrollToOffset(reactiveData.offset - prevListSize);\n\n      calcRange();\n    }\n    // expose only\n    function increaseTopSize(prevList: any[]) {\n      calcListTotalSize();\n\n      let prevListSize = 0;\n      prevList.forEach((item) => {\n        // console.log(item[props.itemKey], getItemSize(item[props.itemKey]));\n        prevListSize += getItemSize(item[props.itemKey]);\n      });\n      reactiveData.inViewBegin += prevList.length;\n      reactiveData.virtualSize += prevListSize;\n      scrollToOffset(reactiveData.offset + prevListSize);\n\n      calcRange();\n    }\n\n    function forceUpdate() {\n      renderKey.value = new Date().getTime();\n    }\n\n    let resizeObserver: ResizeObserver | undefined = undefined;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver((entries) => {\n        // FIXME 这里加了requestIdleCallback会有问题，暂时不知道为什么\n        // 延迟执行，快速滚动的时候是没有必要的\n        // requestIdleCallback(() => {\n        let diff = 0;\n        for (const entry of entries) {\n          const id = (entry.target as HTMLElement).dataset.id;\n\n          if (id) {\n            const oldSize = getItemSize(id);\n            const newSize = props.horizontal\n              ? entry.borderBoxSize[0].inlineSize\n              : entry.borderBoxSize[0].blockSize;\n\n            if (id === 'client') {\n              slotSize.clientSize = newSize;\n              onClientResize();\n            } else if (id === 'header') {\n              slotSize.headerSize = newSize;\n            } else if (id === 'footer') {\n              slotSize.footerSize = newSize;\n            } else if (id === 'stickyHeader') {\n              slotSize.stickyHeaderSize = newSize;\n            } else if (id === 'stickyFooter') {\n              slotSize.stickyFooterSize = newSize;\n            } else if (oldSize !== newSize) {\n              setItemSize(id, newSize);\n              diff += newSize - oldSize;\n              context.emit('itemResize', id, newSize);\n            }\n          }\n        }\n        reactiveData.listTotalSize += diff;\n        // console.log(fixOffset, forceFixOffset, diff);\n        // 向上滚动纠正误差 - 当没有顶部buffer的时候是需要的\n        if ((fixOffset || forceFixOffset) && diff !== 0) {\n          fixOffset = false;\n          forceFixOffset = false;\n          scrollToOffset(reactiveData.offset + diff);\n          // console.log('纠正误差', reactiveData.offset, diff);\n        }\n      });\n    }\n\n    onBeforeMount(() => {\n      if (props.bufferTop) {\n        reactiveData.bufferTop = props.bufferTop;\n      } else {\n        reactiveData.bufferTop = props.buffer;\n      }\n\n      if (props.bufferBottom) {\n        reactiveData.bufferBottom = props.bufferBottom;\n      } else {\n        reactiveData.bufferBottom = props.buffer;\n      }\n    });\n\n    onMounted(() => {\n      if (clientRef.value) {\n        clientRef.value.$el.addEventListener('scroll', onScroll);\n      }\n\n      if (props.start) {\n        scrollToIndex(props.start);\n      } else if (props.offset) {\n        scrollToOffset(props.offset);\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (clientRef.value) {\n        clientRef.value.$el.removeEventListener('scroll', onScroll);\n      }\n    });\n\n    function getVirtualSize2beginInView() {\n      return (\n        reactiveData.virtualSize +\n        getRangeSize(reactiveData.renderBegin, reactiveData.inViewBegin)\n      );\n    }\n\n    function getRangeSize(range1: number, range2: number) {\n      const start = Math.min(range1, range2);\n      const end = Math.max(range1, range2);\n      let re = 0;\n      for (let i = start; i < end; i += 1) {\n        re += getItemSize(props.list[i]?.[props.itemKey]);\n      }\n      return re;\n    }\n\n    const filterList: ShallowRef<any[]> = shallowRef([]);\n    watch(\n      // 这里为什么用 renderKey 代替监听 props.list\n      // 因为props.list会导致v-for时deepArray导致大量的性能浪费\n      () => [reactiveData.inViewBegin, reactiveData.inViewEnd, renderKey.value],\n      (newVal, oldVal) => {\n        if (newVal && oldVal) {\n          // console.log('watch', newVal, oldVal);\n          const [_newInViewBegin] = newVal;\n          const [_oldInViewBegin] = oldVal;\n\n          const _oldRenderBegin = Math.max(\n            0,\n            _oldInViewBegin - reactiveData.bufferTop,\n          );\n\n          const _newRenderBegin = Math.max(\n            0,\n            _newInViewBegin - reactiveData.bufferTop,\n          );\n\n          const _newRenderEnd = Math.min(\n            reactiveData.inViewEnd + reactiveData.bufferBottom,\n            props.list.length,\n          );\n\n          // update virtualSize, diff range size\n          if (_newRenderBegin > _oldRenderBegin) {\n            reactiveData.virtualSize += getRangeSize(\n              _newRenderBegin,\n              _oldRenderBegin,\n            );\n          } else {\n            reactiveData.virtualSize -= getRangeSize(\n              _newRenderBegin,\n              _oldRenderBegin,\n            );\n          }\n\n          reactiveData.renderBegin = _newRenderBegin;\n          reactiveData.renderEnd = _newRenderEnd;\n\n          // 实际渲染的时候要用buffer的\n          filterList.value = props.list.slice(\n            reactiveData.renderBegin,\n            reactiveData.renderEnd,\n          );\n        }\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    watch(\n      () => props.list.length,\n      () => {\n        // 如果数据为空，那么就重置\n        if (props.list.length <= 0) {\n          reset();\n          return;\n        }\n\n        // [require] 因为list长度变化，所以总高度有变化\n        calcListTotalSize();\n        // [require] 因为list长度变化，所以重新计算起始结束位置\n        updateRange(reactiveData.inViewBegin);\n        // [require] 起始位置可能不变，但列表元素发生变化，所以强制渲染一次\n        forceUpdate();\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    return {\n      props,\n\n      filterList,\n\n      clientRef,\n      listRefEl,\n      reactiveData,\n\n      getOffset,\n      reset,\n      scrollToIndex,\n      scrollIntoView,\n      scrollToTop,\n      scrollToBottom,\n      scrollToOffset,\n      getItemSize,\n      deleteItemSize,\n      // expose only\n      decreaseTopSize,\n      increaseTopSize,\n      getItemPosByIndex,\n      forceUpdate,\n      resizeObserver,\n      sizesMap,\n      // test\n      slotSize,\n    };\n  },\n  render() {\n    const { filterList, itemKey, reactiveData, resizeObserver } = this;\n    const {\n      horizontal,\n      listStyle,\n      listClass,\n      itemStyle,\n      itemClass,\n      headerClass,\n      headerStyle,\n      footerClass,\n      footerStyle,\n      stickyHeaderClass,\n      stickyHeaderStyle,\n      stickyFooterClass,\n      stickyFooterStyle,\n    } = this.props;\n\n    const renderStickyHeaderSlot = (): any => {\n      return this.$slots.stickyHeader\n        ? h(\n            ObserverItem,\n            polyfillAttr(\n              {\n                key: 'slot-sticky-header',\n                class: stickyHeaderClass,\n                style: `position: sticky; z-index: 10; ${\n                  horizontal ? 'left: 0' : 'top: 0;'\n                } ${stickyHeaderStyle}`,\n              },\n              {\n                id: 'stickyHeader',\n                resizeObserver: resizeObserver,\n                unmount: () => {\n                  this.slotSize.stickyHeaderSize = 0;\n                },\n              },\n            ),\n            [polyfillSlot(this.$slots.stickyHeader)],\n          )\n        : null;\n    };\n\n    const renderStickyFooterSlot = () => {\n      return this.$slots.stickyFooter\n        ? h(\n            ObserverItem,\n            polyfillAttr(\n              {\n                key: 'slot-sticky-footer',\n                class: stickyFooterClass,\n                style: `position: sticky; z-index: 10; ${\n                  horizontal ? 'right: 0' : 'bottom: 0;'\n                } ${stickyFooterStyle}`,\n              },\n              {\n                id: 'stickyFooter',\n                resizeObserver: resizeObserver,\n                unmount: () => {\n                  this.slotSize.stickyFooterSize = 0;\n                },\n              },\n            ),\n            [polyfillSlot(this.$slots.stickyFooter)],\n          )\n        : null;\n    };\n\n    const renderHeaderSlot = () => {\n      return this.$slots.header\n        ? h(\n            ObserverItem,\n            polyfillAttr(\n              {\n                key: 'slot-header',\n                class: headerClass,\n                style: headerStyle,\n              },\n              {\n                id: 'header',\n                resizeObserver: resizeObserver,\n                unmount: () => {\n                  this.slotSize.headerSize = 0;\n                },\n              },\n            ),\n            [polyfillSlot(this.$slots.header)],\n          )\n        : null;\n    };\n\n    const renderFooterSlot = () => {\n      return this.$slots.footer\n        ? h(\n            ObserverItem,\n            polyfillAttr(\n              {\n                key: 'slot-footer',\n                class: footerClass,\n                style: footerStyle,\n              },\n              {\n                id: 'footer',\n                resizeObserver: resizeObserver,\n                unmount: () => {\n                  this.slotSize.footerSize = 0;\n                },\n              },\n            ),\n            [polyfillSlot(this.$slots.footer)],\n          )\n        : null;\n    };\n\n    const { listTotalSize, virtualSize } = reactiveData;\n\n    const renderMainList = () => {\n      const mainList = [];\n      for (let index = 0; index < filterList.length; index += 1) {\n        const currentItem = filterList[index];\n        mainList.push(\n          h(\n            ObserverItem,\n            polyfillAttr(\n              {\n                key: currentItem[itemKey],\n                class: itemClass,\n                style: itemStyle,\n              },\n              {\n                id: currentItem[itemKey],\n                resizeObserver: resizeObserver,\n              },\n            ),\n            polyfillChildren([\n              isVue2\n                ? this.$scopedSlots?.default?.({ itemData: currentItem })\n                : (this.$slots as any).default?.({\n                    itemData: currentItem,\n                  }),\n            ]) as VNodeChildren,\n          ),\n        );\n      }\n\n      const dynamicListStyle = horizontal\n        ? `will-change: width; min-width: ${listTotalSize}px; display: flex; ${listStyle}`\n        : `will-change: height; min-height: ${listTotalSize}px; ${listStyle}`;\n\n      return h(\n        'div',\n        {\n          ref: 'listRefEl',\n          class: listClass,\n          style: dynamicListStyle,\n        },\n        [\n          h('div', {\n            style: horizontal\n              ? `width: ${virtualSize}px; will-change: width;`\n              : `height: ${virtualSize}px; will-change: height;`,\n          }),\n          mainList,\n        ],\n      );\n    };\n\n    // const renderVirtualScrollbar = () => {\n    //   return <div style={`float: left; height: ${listTotalSize}px`}></div>; // 虚拟滚动条\n    // };\n\n    return h(\n      ObserverItem,\n      polyfillAttr(\n        {\n          class: 'virtual-list__client',\n          style: `width: 100%; height: 100%; overflow: overlay;`,\n          ref: 'clientRef',\n        },\n        {\n          id: 'client',\n          resizeObserver: resizeObserver,\n          unmount: () => {\n            this.slotSize.clientSize = 0;\n          },\n        },\n      ),\n      polyfillChildren([\n        renderStickyHeaderSlot(),\n        renderHeaderSlot(),\n        renderMainList(),\n        renderFooterSlot(),\n        renderStickyFooterSlot(),\n      ]) as VNodeChildren,\n    );\n  },\n});\n\nexport { VirtualList };\n"],"names":["polyfillAttr","rest","attrs","isVue2","polyfillChildren","children","default","polyfillSlot","slot","ObserverItem","defineComponent","name","props","resizeObserver","type","ResizeObserver","require","id","String","Number","unmount","Function","undefined","setup","itemRefEl","ref","onMounted","value","observe","onBeforeUnmount","unobserve","render","h","$slots","VirtualList","list","Array","itemKey","required","minSize","fixed","Boolean","buffer","bufferTop","bufferBottom","scrollDistance","horizontal","start","offset","listStyle","listClass","itemStyle","itemClass","headerClass","headerStyle","footerClass","footerStyle","stickyHeaderClass","stickyHeaderStyle","stickyFooterClass","stickyFooterStyle","context","clientRef","listRefEl","sizesMap","Map","renderKey","Date","getTime","direction","fixOffset","forceFixOffset","slotSize","clientSize","headerSize","footerSize","stickyHeaderSize","stickyFooterSize","reactiveData","reactive","views","listTotalSize","virtualSize","inViewBegin","inViewEnd","renderBegin","renderEnd","getOffset","directionKey","$el","getSlotSize","getTotalSize","getItemSize","get","setItemSize","size","set","deleteItemSize","delete","getItemPosByIndex","index","top","current","bottom","topReduce","i","currentSize","scrollToOffset","needForceFixOffset","scrollToIndex","console","log","length","scrollToBottom","lastOffset","recursion","setTimeout","scrollIntoView","targetMin","targetMax","offsetMin","offsetMax","scrollToTop","Math","abs","round","fixSelection","selection","window","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","requestAnimationFrame","setBaseAndExtent","updateRange","min","calcRange","offsetWithNoHeader","offsetReduce","getVirtualSize2beginInView","onScroll","evt","emit","calcViews","newViews","ceil","onClientResize","calcListTotalSize","re","reset","clear","decreaseTopSize","prevList","prevListSize","forEach","item","increaseTopSize","forceUpdate","entries","diff","entry","target","dataset","oldSize","newSize","borderBoxSize","inlineSize","blockSize","onBeforeMount","addEventListener","removeEventListener","getRangeSize","range1","range2","end","max","filterList","shallowRef","watch","newVal","oldVal","_newInViewBegin","_oldInViewBegin","_oldRenderBegin","_newRenderBegin","_newRenderEnd","slice","immediate","renderStickyHeaderSlot","stickyHeader","key","class","style","renderStickyFooterSlot","stickyFooter","renderHeaderSlot","header","renderFooterSlot","footer","renderMainList","mainList","currentItem","push","$scopedSlots","itemData","dynamicListStyle"],"mappings":"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"}