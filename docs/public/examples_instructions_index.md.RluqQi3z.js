import{_ as e,c as a,o as t,R as o}from"./chunks/framework.UVXzjgAp.js";const u=JSON.parse('{"title":"特殊说明","description":"","frontmatter":{},"headers":[],"relativePath":"examples/instructions/index.md","filePath":"examples/instructions/index.md"}'),i={name:"examples/instructions/index.md"},n=o('<h1 id="特殊说明" tabindex="-1">特殊说明 <a class="header-anchor" href="#特殊说明" aria-label="Permalink to &quot;特殊说明&quot;">​</a></h1><h2 id="百万级数据" tabindex="-1">百万级数据 <a class="header-anchor" href="#百万级数据" aria-label="Permalink to &quot;百万级数据&quot;">​</a></h2><p>目前受限于浏览器最高高度限制，导致滚动条超出一定高度后无法继续滚动。在示例中，大约上线为38万行数据。后续作者计划通过自己模拟滚动条来实现百万级数据的展示</p><h2 id="滚动性能" tabindex="-1">滚动性能 <a class="header-anchor" href="#滚动性能" aria-label="Permalink to &quot;滚动性能&quot;">​</a></h2><p>本虚拟列表支持满帧渲染，但在大数据或复杂dom场景下应当由使用者自行避免2个问题：</p><ol><li>列表数据应当使用非响应式数据 ShallowRef 替换 响应式数据 Ref</li><li>复杂dom应当使渲染层和交互层分离，渲染层dom要极简。</li></ol><h2 id="修复滚动selection问题" tabindex="-1">修复滚动selection问题 <a class="header-anchor" href="#修复滚动selection问题" aria-label="Permalink to &quot;修复滚动selection问题&quot;">​</a></h2><p>仅修复vue2下diff算法的bug(列表在向下滚动过程中，vue2-diff算法会导致整个列表重新挂载)</p>',8),r=[n];function s(l,c,d,h,_,p){return t(),a("div",null,r)}const f=e(i,[["render",s]]);export{u as __pageData,f as default};
